version: '3.8'

services:
  # MySQL 데이터베이스 서비스
  db:
    image: mysql:8.0
    container_name: seosan-mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: seosan_issue_db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$DB_PASSWORD"]
      timeout: 20s
      retries: 10
      interval: 5s
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Python 크롤러 API 서비스 (로컬 빌드)
  crawler:
    build:
      context: ./crawler
      dockerfile: Dockerfile
    container_name: seosan-crawler-api
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    env_file:
      - ./.env

  # Spring Boot 백엔드 서비스 (로컬 빌드)
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: seosan-backend-app
    ports:
      - "8082:8082"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      # 데이터베이스 연결 정보
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/seosan_issue_db?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_PROFILES_ACTIVE: prod
      # 외부 API 키
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      KMA_SERVICE_KEY: ${KMA_SERVICE_KEY}

volumes:
  db-data: # MySQL 데이터를 영속적으로 저장하기 위한 볼륨
