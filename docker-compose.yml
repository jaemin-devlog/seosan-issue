version: '3.8'

services:
  # MySQL 데이터베이스 서비스
  db:
    image: mysql:8.0
    container_name: seosan-mysql-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: seosan_issue_db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - db-data:/var/lib/mysql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Python 크롤러 API 서비스 (Docker Hub에서 이미지 다운로드)
  crawler:
    image: ${DOCKERHUB_USERNAME}/seosan-issue-crawler:latest
    container_name: seosan-crawler-api
    ports:
      - "5001:5001"
    restart: always

  # Spring Boot 백엔드 서비스 (Docker Hub에서 이미지 다운로드)
  backend:
    image: ${DOCKERHUB_USERNAME}/seosan-issue-backend:latest
    container_name: seosan-backend-app
    ports:
      - "8082:8082"
    depends_on:
      - db
      - crawler # db 서비스가 먼저 시작된 후에 backend가 시작되도록 설정
      - crawler # crawler 서비스가 먼저 시작된 후에 backend가 시작되도록 설정
    restart: always
    environment:
      # 데이터베이스 연결 정보
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/seosan_issue_db?serverTimezone=Asia/Seoul&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      # 크롤러 API 주소 (Docker 내부 네트워크에서는 서비스 이름으로 접근)
      CRAWLER_API_BASE_URL: http://crawler:5001
      # 외부 API 키
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      KMA_SERVICE_KEY: ${KMA_SERVICE_KEY}

volumes:
  db-data: # MySQL 데이터를 영속적으로 저장하기 위한 볼륨
