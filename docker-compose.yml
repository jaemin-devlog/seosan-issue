#docker-compose.yml
services:
  db:
    image: mysql:8.0
    container_name: seosan-mysql-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: seosan_issue_db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$$DB_PASSWORD"]
      interval: 5s
      timeout: 20s
      retries: 10
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  redis:
    image: redis:latest
    container_name: seosan-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}

  crawler:
    build:
      context: ./crawler
      dockerfile: Dockerfile
    container_name: seosan-crawler-api
    ports:
      - "5001:5001"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    env_file:
      - ./.env
    environment:
      PORT: 5001
      DB_HOST: db
      DB_NAME: seosan_issue_db

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: seosan-backend-app
    depends_on:
      db:
        condition: service_healthy
      crawler:
        condition: service_started
      redis:
        condition: service_started
    restart: always
    env_file:
      - ./.env
    environment:
      PORT: 8083
      SPRING_PROFILES_ACTIVE: docker

  nginx:
    image: nginx:latest
    container_name: seosan-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    container_name: seosan-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  db-data:
